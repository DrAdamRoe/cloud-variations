name: Test The Cloud Variations (somewhat)

on: [push]

jobs: 
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python 3.11.x
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Display Python Version (should be 3.11.x)
        run: python --version
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # this is only a simple test of the flask app itself
      - name: Test 
        run:  python -m unittest -v tests/test_api.py
  # job to test against App Engine
  test-app-engine:
    needs: build-and-test
    runs-on: ubuntu-22.04
    steps: 
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authorize GCP
        uses: 'google-github-actions/auth@v2'
        with: 
            credentials_json: ${{ secrets.JSON_CREDENTIALS_spring2024 }}  
      - name: Deploy to Google App Engine
        id: deploy-gae
        uses: google-github-actions/deploy-appengine@v2
        with:
          deliverables: app-engine.yaml
      - name: Get response from Google App Engine deployment 
        run: |
            curl "${{ steps.deploy-gae.outputs.url }}"
            echo -n GAE_CURL_RESPONSE= >> $GITHUB_ENV
            curl "${{ steps.deploy-gae.outputs.url }}" >> $GITHUB_ENV
      - name: Check response from Google App Engine deployment 
        if: ${{ !contains(env.GAE_CURL_RESPONSE, 'Hello, Cloud') }}
        run: exit 1
        
       
# job to test against Functions 
  test-functions:
    needs: build-and-test
    runs-on: ubuntu-22.04
    steps: 
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authorize GCP
        uses: 'google-github-actions/auth@v2'
        with: 
          credentials_json: ${{ secrets.JSON_CREDENTIALS_spring2024 }}  
      - name: Deploy to Google Cloud Functions
        id: deploy-functions
        uses: google-github-actions/deploy-cloud-functions@v2
        with:
          name: hello_cloud
          build_environment_variables: GOOGLE_FUNCTION_SOURCE=api/hello_cloud.py
          runtime: python311
          region: europe-west3
      - name: Get response from Google Cloud Functions deployment 
        run: |
            curl "${{ steps.deploy-functions.outputs.url }}"
            echo -n GCF_CURL_RESPONSE= >> $GITHUB_ENV
            curl "${{ steps.deploy-functions.outputs.url }}" >> $GITHUB_ENV
      - name: Check response from Google Cloud Functions deployment 
        if: ${{ !contains(env.GCF_CURL_RESPONSE, 'Hello, Cloud') }}
        run: exit 1

# job to test against Cloud Run
  build-container: 
    needs: build-and-test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authorize GCP
        uses: 'google-github-actions/auth@v2'
        with: 
          credentials_json: ${{ secrets.JSON_CREDENTIALS_spring2024 }}  
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Authorize Docker push
        run: gcloud auth configure-docker europe-west3-docker.pkg.dev

      - name: Build and Push Container
        run: |
          docker build --tag europe-west3-docker.pkg.dev/cloud-variations-spring24test/hello-cloud/hello-cloud:latest .
          docker push europe-west3-docker.pkg.dev/cloud-variations-spring24test/hello-cloud/hello-cloud:latest
  test-run:
    needs: build-container
    runs-on: ubuntu-22.04
    steps: 
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authorize GCP
        uses: 'google-github-actions/auth@v2'
        with: 
          credentials_json: ${{ secrets.JSON_CREDENTIALS_spring2024 }}        
      - name: Deploy to Google Cloud Run
        id: deploy-run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: hello-cloud-run
          image: europe-west3-docker.pkg.dev/cloud-variations-spring24test/hello-cloud/hello-cloud:latest
          region: europe-west3
          flags: --port=5022 --allow-unauthenticated
      - name: Get response from Google Cloud Run deployment 
        run: |
            curl "${{ steps.deploy-run.outputs.url }}"
            echo -n GCR_CURL_RESPONSE= >> $GITHUB_ENV
            curl "${{ steps.deploy-run.outputs.url }}" >> $GITHUB_ENV
      - name: Check response from Google Cloud Run deployment 
        if: ${{ !contains(env.GCR_CURL_RESPONSE, 'Hello, Cloud') }}
        run: exit 1

